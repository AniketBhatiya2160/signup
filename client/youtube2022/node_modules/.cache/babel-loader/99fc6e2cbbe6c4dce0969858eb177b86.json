{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\aniket.bhatiya\\\\Desktop\\\\loginsignup\\\\client\\\\youtube2022\\\\src\\\\pages\\\\Register.jsx\",\n    _s = $RefreshSig$();\n\nimport React from \"react\";\nimport { Link, useNavigate } from \"react-router-dom\";\nimport axios from \"axios\";\nimport { useFormik } from \"formik\";\nimport { signUpSchema } from \"../schemas\";\nimport { ToastContainer, toast } from \"react-toastify\";\nimport \"react-toastify/dist/ReactToastify.css\";\nimport Oheader from \"../components/Oheader\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst initialValues = {\n  username: \"\",\n  email: \"\",\n  password: \"\",\n  confirm_password: \"\"\n};\n\nconst Register = () => {\n  _s();\n\n  // const [inputs, setInputs] = useState({\n  //   username: \"\",\n  //   email: \"\",\n  //   password: \"\",\n  // });\n  // const [err, setError] = useState(null);\n  const navigate = useNavigate(); // const handleChange = (e) => {\n  //   setInputs((prev) => ({ ...prev, [e.target.name]: e.target.value }));\n  // }; //dk\n\n  const {\n    values,\n    errors,\n    touched,\n    handleBlur,\n    handleChange,\n    handleSubmit\n  } = useFormik({\n    initialValues,\n    validationSchema: signUpSchema,\n    onSubmit: async (values, action) => {\n      try {\n        await axios.post(\"http://10.0.1.205:8800/api/auth/register\", values);\n        navigate(\"/\");\n      } catch (err) {\n        toast.error(err.response.data);\n      }\n\n      action.resetForm();\n    }\n  });\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: /*#__PURE__*/_jsxDEV(Oheader, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 49,\n      columnNumber: 10\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 49,\n    columnNumber: 5\n  }, this);\n};\n\n_s(Register, \"VtPenmC3sAj7kYxdmU6eqAfinVc=\", false, function () {\n  return [useNavigate, useFormik];\n});\n\n_c = Register;\nexport default Register;\n\nvar _c;\n\n$RefreshReg$(_c, \"Register\");","map":{"version":3,"sources":["C:/Users/aniket.bhatiya/Desktop/loginsignup/client/youtube2022/src/pages/Register.jsx"],"names":["React","Link","useNavigate","axios","useFormik","signUpSchema","ToastContainer","toast","Oheader","initialValues","username","email","password","confirm_password","Register","navigate","values","errors","touched","handleBlur","handleChange","handleSubmit","validationSchema","onSubmit","action","post","err","error","response","data","resetForm"],"mappings":";;;AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,SAASC,IAAT,EAAeC,WAAf,QAAkC,kBAAlC;AACA,OAAOC,KAAP,MAAkB,OAAlB;AACA,SAASC,SAAT,QAA0B,QAA1B;AACA,SAASC,YAAT,QAA6B,YAA7B;AACA,SAASC,cAAT,EAAyBC,KAAzB,QAAsC,gBAAtC;AACA,OAAO,uCAAP;AACA,OAAOC,OAAP,MAAoB,uBAApB;;AAEA,MAAMC,aAAa,GAAG;AACpBC,EAAAA,QAAQ,EAAE,EADU;AAEpBC,EAAAA,KAAK,EAAE,EAFa;AAGpBC,EAAAA,QAAQ,EAAE,EAHU;AAIpBC,EAAAA,gBAAgB,EAAE;AAJE,CAAtB;;AAOA,MAAMC,QAAQ,GAAG,MAAM;AAAA;;AACrB;AACA;AACA;AACA;AACA;AAEA;AAEA,QAAMC,QAAQ,GAAGb,WAAW,EAA5B,CATqB,CAWrB;AACA;AACA;;AAEA,QAAM;AAAEc,IAAAA,MAAF;AAAUC,IAAAA,MAAV;AAAkBC,IAAAA,OAAlB;AAA2BC,IAAAA,UAA3B;AAAuCC,IAAAA,YAAvC;AAAqDC,IAAAA;AAArD,MACJjB,SAAS,CAAC;AACRK,IAAAA,aADQ;AAERa,IAAAA,gBAAgB,EAAEjB,YAFV;AAGRkB,IAAAA,QAAQ,EAAE,OAAOP,MAAP,EAAeQ,MAAf,KAA0B;AAClC,UAAI;AACF,cAAMrB,KAAK,CAACsB,IAAN,CAAW,0CAAX,EAAuDT,MAAvD,CAAN;AACAD,QAAAA,QAAQ,CAAC,GAAD,CAAR;AACD,OAHD,CAGE,OAAOW,GAAP,EAAY;AACZnB,QAAAA,KAAK,CAACoB,KAAN,CAAYD,GAAG,CAACE,QAAJ,CAAaC,IAAzB;AACD;;AAEDL,MAAAA,MAAM,CAACM,SAAP;AACD;AAZO,GAAD,CADX;AAgBA,sBACE;AAAA,2BAAK,QAAC,OAAD;AAAA;AAAA;AAAA;AAAA;AAAL;AAAA;AAAA;AAAA;AAAA,UADF;AAKD,CApCD;;GAAMhB,Q;UASaZ,W,EAOfE,S;;;KAhBEU,Q;AAsCN,eAAeA,QAAf","sourcesContent":["import React from \"react\";\r\nimport { Link, useNavigate } from \"react-router-dom\";\r\nimport axios from \"axios\";\r\nimport { useFormik } from \"formik\";\r\nimport { signUpSchema } from \"../schemas\";\r\nimport { ToastContainer, toast } from \"react-toastify\";\r\nimport \"react-toastify/dist/ReactToastify.css\";\r\nimport Oheader from \"../components/Oheader\";\r\n\r\nconst initialValues = {\r\n  username: \"\",\r\n  email: \"\",\r\n  password: \"\",\r\n  confirm_password: \"\",\r\n};\r\n\r\nconst Register = () => {\r\n  // const [inputs, setInputs] = useState({\r\n  //   username: \"\",\r\n  //   email: \"\",\r\n  //   password: \"\",\r\n  // });\r\n\r\n  // const [err, setError] = useState(null);\r\n\r\n  const navigate = useNavigate();\r\n\r\n  // const handleChange = (e) => {\r\n  //   setInputs((prev) => ({ ...prev, [e.target.name]: e.target.value }));\r\n  // }; //dk\r\n\r\n  const { values, errors, touched, handleBlur, handleChange, handleSubmit } =\r\n    useFormik({\r\n      initialValues,\r\n      validationSchema: signUpSchema,\r\n      onSubmit: async (values, action) => {\r\n        try {\r\n          await axios.post(\"http://10.0.1.205:8800/api/auth/register\", values);\r\n          navigate(\"/\");\r\n        } catch (err) {\r\n          toast.error(err.response.data);\r\n        }\r\n\r\n        action.resetForm();\r\n      },\r\n    });\r\n\r\n  return (\r\n    <div><Oheader/>\r\n    </div>\r\n    \r\n  );\r\n};\r\n\r\nexport default Register;\r\n"]},"metadata":{},"sourceType":"module"}